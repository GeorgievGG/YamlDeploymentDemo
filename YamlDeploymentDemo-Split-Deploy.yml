trigger: none

pool:
    vmImage: "windows-latest"

resources:
  pipelines:
    - pipeline: YDD
      source: 'Build-YamlDeploymentDemo' #matches the build pipeline in DevOps
      branch: master
      trigger:
        branches:
        - '*'

variables:
  - group: 'YamlDeploymentVarGrpSplit' #variable group located in Library tab
  - name: AzureSubscription
    value: 'Azure Personal Sub 2' #should match an AzureRM connection in DevOps

stages:

  - stage: Provision_Common_Resources
    dependsOn: []
    jobs:
      - job: Provision_Common_Resources
        steps:
          - template: Templates/provision-common-resources.yml
            parameters:
              ResourceGroup: $(ResourceGroup)
              Region: $(Region)
              SqlServerName: $(SqlServerName)
              SqlServerAdminUser: $(SqlServerAdminUser)
              SqlserverAdminPassword: $(SqlserverAdminPassword)
              WebServerFarmName: $(WebServerFarmName)
              ApplicationInsightsName: $(SiteName)-appinsights

  - stage: Deploy_DB_Schema
    dependsOn: 
      - Provision_Common_Resources
    variables:
      EnvironmentName: YamlDeploymentEnv
    jobs:
      - deployment: Deploy_DB_Schema
        environment: ${{ variables.EnvironmentName }}
        pool:
          vmImage: 'windows-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: Templates/deploy-db.yml
                  parameters:
                    SqlServerAdminUser: $(SqlServerAdminUser)
                    SqlserverAdminPassword: $(SqlserverAdminPassword)
                    SqlServerNameFqdn: $(SqlServerNameFqdn)
                    DbName: ydd-db
                    
  - stage: Provision_Storage
    dependsOn: 
      - Provision_Common_Resources
    jobs:
      - job: Provision_Storage
        steps:
          - template: Templates/provision-storage.yml
            parameters:
              ResourceGroup: $(ResourceGroup)
              Region: $(Region)
              StorageAccountName: $(SiteName)storage
              
  - stage: Provision_WebApps
    dependsOn: 
      - Provision_Common_Resources
    jobs:
      - job: Provision_WebApps
        steps:
          - template: Templates/provision-webapps.yml
            parameters:
              ResourceGroup: $(ResourceGroup)
              Region: $(Region)
              SqlServerName: $(SqlServerName)
              WebServerFarmName: $(WebServerFarmName)
              WebAppName: $(SiteName)-web
              ApiName: $(SiteName)-api
              
  - stage: Provision_FunctionApp
    dependsOn: 
      - Provision_Common_Resources
      - Provision_Storage
    jobs:
      - job: Provision_FunctionApp
        steps:
          - template: Templates/provision-function-app.yml
            parameters:
              ResourceGroup: $(ResourceGroup)
              Region: $(Region)
              WebServerFarmName: $(WebServerFarmName)
              ApplicationInsightsName: $(SiteName)-appinsights
              StorageAccountName: $(SiteName)storage
              FunctionAppName: $(SiteName)-fn
              
  - stage: Settings_Configuration
    dependsOn: 
      - Provision_Storage
      - Provision_WebApps
      - Provision_FunctionApp
    jobs:
      - job: Settings_Configuration
        steps:
          - template: Templates/setting-configuration.yml
            parameters:
                ResourceGroup: $(ResourceGroup)
                Region: $(Region)
                SqlServerName: $(SqlServerName)
                SqlServerAdminUser: $(SqlServerAdminUser)
                SqlserverAdminPassword: $(SqlserverAdminPassword)
                DbName: ydd-db
                ApplicationInsightsName: $(SiteName)-appinsights
                StorageAccountName: $(SiteName)storage
                WebAppName: $(SiteName)-web
                FunctionAppName: $(SiteName)-fn
                ApiName: $(SiteName)-api
                StolenBikeCheckFunctionInterval: 0 */5 * * * *

  - stage: Deploy_API
    dependsOn: 
      - Provision_WebApps
    variables:
      EnvironmentName: YamlDeploymentEnv
    jobs:
      - deployment: Deploy_API
        environment: ${{ variables.EnvironmentName }}
        pool:
          vmImage: 'windows-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: Templates/deploy-api.yml
                  parameters:
                    ApiName: $(SiteName)-api

  - stage: Deploy_Web_App
    dependsOn: 
      - Provision_WebApps
    variables:
      EnvironmentName: YamlDeploymentEnv
    jobs:
      - deployment: Deploy_Web_App
        environment: ${{ variables.EnvironmentName }}
        pool:
          vmImage: 'windows-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: Templates/deploy-web.yml
                  parameters:
                    WebAppName: $(SiteName)-web

  - stage: Deploy_Functions
    dependsOn: 
      - Provision_FunctionApp
    variables:
      EnvironmentName: YamlDeploymentEnv
    jobs:
      - deployment: Deploy_Functions
        environment: ${{ variables.EnvironmentName }}
        pool:
          vmImage: 'windows-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: Templates/deploy-functions.yml
                  parameters:
                    FunctionAppName: $(SiteName)-fn